import org.apache.tools.ant.filters.ReplaceTokens
plugins {
    id "com.github.johnrengelman.shadow" version "7.1.0" apply false
    id "maven-publish"
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'com.github.johnrengelman.shadow'
    group = 'xyz.oribuin.eternalcrates'
    version = '1.0.5-pre1'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    compileJava {
        options.compilerArgs += ['-parameters']
        options.fork = true
        options.encoding = 'UTF-8'
    }


    repositories {
        mavenCentral()
        mavenLocal()

        maven { url 'https://libraries.minecraft.net' }
        maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
        maven { url "https://repo.rosewooddev.io/repository/public/" }
        maven { url "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
        maven { url "https://repo.codemc.org/repository/maven-public/" }
        maven { url 'https://jitpack.io' }
        maven { url 'https://erethon.de/repo/' }
        maven { url 'https://mvn.lumine.io/repository/maven-public/' }

        maven {
            url = 'https://repo.rosewooddev.io/repository/maven-public'
            credentials {
                username project.mavenUser
                password project.mavenPassword
                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
    }

    dependencies {
        compileOnly 'org.jetbrains:annotations:23.1.0'
    }

}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.10.9'
    compileOnly 'com.mojang:authlib:1.5.21'
    compileOnly 'com.arcaniax:HeadDatabase-API:1.3.1', {
        exclude group: 'org.spigotmc'
    }

    // Frameworks & MySQL APIs
    compileOnly 'io.github.bananapuncher714:nbteditor:7.18.2'
    api "dev.rosewood:rosegarden:1.2.3"
    api('dev.triumphteam:triumph-gui:3.1.4') {  // https://mf.mattstudios.me/triumph-gui/introduction
        exclude group: "com.google.code.gson", module: "gson" // Remove GSON, Already included in spigot api
        exclude group: "net.kyori", module: "*" // Remove kyori, we're using plugin.yml libraries
    }

    // Custom Item Plugins
    compileOnly 'io.lumine:MythicLib-dist:1.3.1'
    compileOnly 'net.Indyuce:MMOItems:6.7.3'
    compileOnly 'net.Indyuce:MMOCore:1.9.3'
    compileOnly 'com.github.jojodmo:ItemBridge:master-SNAPSHOT'
    compileOnly 'com.ssomar:executableitems:4.2.1.7'
    compileOnly 'com.ssomar:score:1.7.1.7'
    compileOnly 'com.github.LoneDev6:api-itemsadder:2.5.5'
    compileOnly 'de.erethon:caliburn:1.0.3'
    compileOnly 'com.github.oraxen:oraxen:1.152.2'
    compileOnly 'nl.knokko:customitems:9.18'
    compileOnly 'com.github.emanondev:ItemEdit:2.20'
    compileOnly 'thirtyvirus.uber:uberitems:2.6'
    compileOnly 'com.github.Slimefun:Slimefun4:RC-30'
    compileOnly 'io.lumine:Mythic-Dist:5.1.0-SNAPSHOT'
    compileOnly 'com.willfp:eco:6.24.0'
    compileOnly 'me.wolfyscript:customcrafting:3.16.6.2'
    compileOnly 'com.wolfyscript:utilities:4.16.4.1'
}

shadowJar {
    archiveClassifier.set(null)
    minimize {
        exclude(dependency("dev.rosewood:rosegarden:.*"))
    }

    relocate "dev.rosewood.rosegarden", "${project.group}.libs.rosegarden"
    relocate "dev.triumphteam.gui", "${project.group}.libs.triumph-gui"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.yml'
        filter ReplaceTokens, tokens: ["version": project.property("version")]
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            artifactId = 'eternaltags'
            pom {
                name = 'eternaltags'
            }
        }
    }
    repositories {
        if (project.hasProperty('mavenUser') && project.hasProperty('mavenPassword')) {
            maven {
                credentials {
                    username project.mavenUser
                    password project.mavenPassword
                }

                def releasesRepoUrl = 'https://repo.rosewooddev.io/repository/public-releases/'
                def snapshotsRepoUrl = 'https://repo.rosewooddev.io/repository/public-snapshots/'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

build.dependsOn shadowJar
